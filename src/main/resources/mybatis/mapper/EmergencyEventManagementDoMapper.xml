<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zzu.mapper.EmergencyEventManagementDoMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zzu.domain.EmergencyEventManagementDo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="emergency_event" property="emergencyEvent" jdbcType="VARCHAR" />
    <result column="event_type" property="eventType" jdbcType="INTEGER" />
    <result column="event_rating" property="eventRating" jdbcType="INTEGER" />
    <result column="event_reason" property="eventReason" jdbcType="INTEGER" />
    <result column="handling_method" property="handlingMethod" jdbcType="VARCHAR" />
    <result column="handling_result" property="handlingResult" jdbcType="VARCHAR" />
    <result column="handling_worker" property="handlingWorker" jdbcType="VARCHAR" />
    <result column="event_desc" property="eventDesc" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, emergency_event, event_type, event_rating, event_reason, handling_method, handling_result, 
    handling_worker, event_desc, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from emergency_event_management
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from emergency_event_management
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.edu.zzu.domain.EmergencyEventManagementDo" >
    insert into emergency_event_management (id, emergency_event, event_type, 
      event_rating, event_reason, handling_method, 
      handling_result, handling_worker, event_desc, 
      gmt_create, gmt_modified)
    values (#{id,jdbcType=BIGINT}, #{emergencyEvent,jdbcType=VARCHAR}, #{eventType,jdbcType=INTEGER}, 
      #{eventRating,jdbcType=INTEGER}, #{eventReason,jdbcType=INTEGER}, #{handlingMethod,jdbcType=VARCHAR}, 
      #{handlingResult,jdbcType=VARCHAR}, #{handlingWorker,jdbcType=VARCHAR}, #{eventDesc,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zzu.domain.EmergencyEventManagementDo" >
    insert into emergency_event_management
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="emergencyEvent != null" >
        emergency_event,
      </if>
      <if test="eventType != null" >
        event_type,
      </if>
      <if test="eventRating != null" >
        event_rating,
      </if>
      <if test="eventReason != null" >
        event_reason,
      </if>
      <if test="handlingMethod != null" >
        handling_method,
      </if>
      <if test="handlingResult != null" >
        handling_result,
      </if>
      <if test="handlingWorker != null" >
        handling_worker,
      </if>
      <if test="eventDesc != null" >
        event_desc,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="emergencyEvent != null" >
        #{emergencyEvent,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null" >
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventRating != null" >
        #{eventRating,jdbcType=INTEGER},
      </if>
      <if test="eventReason != null" >
        #{eventReason,jdbcType=INTEGER},
      </if>
      <if test="handlingMethod != null" >
        #{handlingMethod,jdbcType=VARCHAR},
      </if>
      <if test="handlingResult != null" >
        #{handlingResult,jdbcType=VARCHAR},
      </if>
      <if test="handlingWorker != null" >
        #{handlingWorker,jdbcType=VARCHAR},
      </if>
      <if test="eventDesc != null" >
        #{eventDesc,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zzu.domain.EmergencyEventManagementDo" >
    update emergency_event_management
    <set >
      <if test="emergencyEvent != null" >
        emergency_event = #{emergencyEvent,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null" >
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventRating != null" >
        event_rating = #{eventRating,jdbcType=INTEGER},
      </if>
      <if test="eventReason != null" >
        event_reason = #{eventReason,jdbcType=INTEGER},
      </if>
      <if test="handlingMethod != null" >
        handling_method = #{handlingMethod,jdbcType=VARCHAR},
      </if>
      <if test="handlingResult != null" >
        handling_result = #{handlingResult,jdbcType=VARCHAR},
      </if>
      <if test="handlingWorker != null" >
        handling_worker = #{handlingWorker,jdbcType=VARCHAR},
      </if>
      <if test="eventDesc != null" >
        event_desc = #{eventDesc,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zzu.domain.EmergencyEventManagementDo" >
    update emergency_event_management
    set emergency_event = #{emergencyEvent,jdbcType=VARCHAR},
      event_type = #{eventType,jdbcType=INTEGER},
      event_rating = #{eventRating,jdbcType=INTEGER},
      event_reason = #{eventReason,jdbcType=INTEGER},
      handling_method = #{handlingMethod,jdbcType=VARCHAR},
      handling_result = #{handlingResult,jdbcType=VARCHAR},
      handling_worker = #{handlingWorker,jdbcType=VARCHAR},
      event_desc = #{eventDesc,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>